name: Azure Container Apps Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.LOGIN_SERVER}}
          # service principal generated using shell script located in infrastructure/scripts dir.
          username: ${{ secrets.ACR_SP_CLIENT_ID }}
          password: ${{ secrets.ACR_SP_CLIENT_SECRET }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.LOGIN_SERVER }}/${{ vars.NAMESPACE }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}
          file: ./functionapp/Dockerfile
          context: ./functionapp

  deploy:
    runs-on: ubuntu-latest
    environment: dev
    needs: build
    permissions:
        id-token: write # Required for OIDC
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run Azure Functions Container Action'
        uses: Azure/functions-container-action@v1
        id: deploy-to-function-app
        with:
          app-name: ${{ vars.AZURE_FUNCTION_APP_NAME }}
          image: ${{ vars.LOGIN_SERVER }}/${{ vars.NAMESPACE }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}

      - name: 'Published functionapp url'
        run: |
          echo "${{ steps.fa.outputs.app-url }}"

      #- name: Build and deploy Container App
      #  uses: azure/container-apps-deploy-action@v1
      #  with:
      #    appSourcePath: ${{ github.workspace }}/functionapp
      #    acrName: ${{ env.ACR_NAME }}
      #    containerAppName: ${{ env.CONTAINER_APP_NAME }}
      #    resourceGroup: ${{ env.RESOURCE_GROUP }}
